#requires -version 2
<#
Malware Analysis Provisioning Script
Downloads:
- Python 2.7
- Firefox
- Windows SDK
- PEStudio
- xorsearch
- brutexor
- ole python
- Offvis
- Office Binary Translator
- HexEditor Neo
- 010 Editor
- Peepdf
- PDFid
- CFF Explorer
- FileAlyzer2
- pdf-parser
- pdfStreamDumper
- apateDNS
- Fiddler2
- Network Miner
- Wireshark
- Regshot
- 7zip
- JPex Flash Decompiler
- Pip Packages: Oletools, Selenium
- OfficeMalScanner
- OffVis
- Xorsearch
- MS VC Python
- IDA Pro
- OllyDbg
- OllyDbg2
- Strings2
- yara
- PEView
- PEStudio
- Process Hacker 2

#>

Import-Module BitsTransfer

Function fetchURL {

    Param (
        [Parameter(Mandatory=$true)]
        [String]$URL
    )

    $request = [System.Net.WebRequest]::Create($url)
    $request.AllowAutoRedirect=$false
    $response=$request.GetResponse()

    If ($response.StatusCode -eq "Found")
    {
      return $response.GetResponseHeader("Location")
    }
    Else
    {
      return $URL
    }
}

Function install_7z_pkg
{
  Try
  {
    # 7Zip
    Start-BitsTransfer -Source "http://www.7-zip.org/a/7z1604.msi" -Destination "C:\Users\$env:UserName\Downloads\7zip.msi"
    Write-Output "Downloaded 7Zip"
    msiexec /i "C:\Users\$env:UserName\Downloads\7zip.msi" /qn /quiet /norestart
    Write-Output "Installed 7zip"
    [Environment]::SetEnvironmentVariable("Path",$env:Path + ";C:\Program Files\7-zip\", [EnvironmentVariableTarget]::Machine)
    $env:Path = [Environment]::GetEnvironmentVariable("Path","Machine")
    Write-Output "Added 7zip to path"
  }
  Catch
  {
    Write-Output "Unable to download 7Zip"
  }
}

Function install_python_pkg
{
  Try
  {
    # Download Python 2.7
    Start-BitsTransfer -Source "https://www.python.org/ftp/python/2.7.13/python-2.7.13.msi" -Destination "C:\Users\$env:UserName\Downloads\python.msi"
    Write-Output "Downloaded Python 2.7"
    msiexec /i "C:\Users\$env:UserName\Downloads\python.msi" /qn /quiet /norestart
    Write-Output "Installed Python 2.7"
    [Environment]::SetEnvironmentVariable("Path",$env:Path + ";C:\Python27\", [EnvironmentVariableTarget]::Machine)
    [Environment]::SetEnvironmentVariable("Path",$env:Path + ";C:\Python27\Scripts\", [EnvironmentVariableTarget]::Machine)
    [Environment]::SetEnvironmentVariable("PathExt",$env:Path + ";.PY", [EnvironmentVariableTarget]::Machine)
    $env:Path = [Environment]::GetEnvironmentVariable("Path","Machine")
    $env:PathExt = [Environment]::GetEnvironmentVariable("PathExt","Machine")
    Write-Output "Added Python to Path"
  }
  Catch
  {
    Write-Output "Unable to download Python 2.7"
  }
}

Function install_msvcpy_pkg
{
  Try
  {
    Start-BitsTransfer -Source "https://download.microsoft.com/download/7/9/6/796EF2E4-801B-4FC4-AB28-B59FBF6D907B/VCForPython27.msi" -Destination "C:\Users\$env:UserName\Downloads\"
    Write-Output "Downloaded MS VC Py Compiler"
    msiexec /i "C:\Users\$env:UserName\Downloads\VCForPython27.msi" /qn /quiet /norestart
    Write-Output "Installed MS VC Py Compiler"
  }
  Catch
  {
    Write-Output "Unable to download MS VC Py Compiler"
  }
}

Function install_py_pkgs
{
  Try
  {
    # Installing Python Packages
    pip install selenium
    Write-Output "Installed Selenium"
    pip install scikit-learn
    Write-Output "Installed scikit-learn"
    pip install oletools
    Write-Output "Installed oletools"
  }
  Catch
  {
    Write-Output "Unable to install pip packages."
  }
}

Function install_firefox_pkg
{
  Try
  {
    # Download Firefox
    Start-BitsTransfer -Source "https://download-installer.cdn.mozilla.net/pub/firefox/releases/51.0.1/win32/en-US/Firefox%20Setup%20Stub%2051.0.1.exe" -Destination "C:\Users\$env:UserName\Downloads\firefox.exe"
    Write-Output "Downloaded Firefox"
  }
  Catch
  {
    Write-Output "Unable to download Firefox"
  }
}

Function install_winsdk_pkg
{
  Try
  {
    # Windows SDK
    Start-BitsTransfer -Source "http://download.microsoft.com/download/C/D/8/CD8533F8-5324-4D30-824C-B834C5AD51F9/standalonesdk/sdksetup.exe" -Destination "C:\Users\$env:UserName\Downloads\"
    Write-Output "Downloaded Windows SDK"
  }
  Catch
  {
    Write-Output "Unable to download Windows SDK."
  }
}

Function instalL_npp_pkg
{
  Try
  {
    # Notepad++
    Start-BitsTransfer -Source "https://notepad-plus-plus.org/repository/7.x/7.3.1/npp.7.3.1.Installer.exe" -Destination "C:\Users\$env:UserName\Downloads\"
    Write-Output "Downloaded Notepad++"
  }
  Catch
  {
    Write-Output "Unable to download Notepad++"
  }
}

Function install_pestudio_pkg
{
  Try
  {
    # PEStudio
    Start-BitsTransfer -Source "https://www.winitor.com/tools/pestudio/current/pestudio.zip" -Destination "C:\Users\$env:UserName\Downloads\"
    Write-Output "Downloaded PEStudio"
  }
  Catch
  {
    Write-Output "Unable to download PEStudio."
  }
}

Function install_wireshark_pkg
{
  Try
  {
    # Wireshark
    Start-BitsTransfer -Source "https://2.na.dl.wireshark.org/win32/Wireshark-win32-2.2.4.exe" -Destination "C:\Users\$env:UserName\Downloads\"
    Write-Output "Downloaded Wireshark."
  }
  Catch
  {
    Write-Output "Unable to download Wireshark"
  }
}

Function install_networkminer_pkg
{
  Try
  {
    # Network Miner
    Start-BitsTransfer -Source "https://www.netresec.com/?download=NetworkMiner" -Destination "C:\Users\$env:UserName\Downloads\"
    Write-Output "Downloaded Network Miner."
  }
  Catch
  {
    Write-Output "Unable to download Network Miner"
  }
}

Function install_prochacker_pkg
{
  Try
  {
    # Process Hacker
    Start-BitsTransfer -Source "https://github.com/processhacker2/processhacker2/releases/download/v2.39/processhacker-2.39-setup.exe" -Destination "C:\Users\$env:UserName\Downloads\"
    Write-Output "Downloaded Process Hacker."
  }
  Catch
  {
    Write-Output "Unable to download Process Hacker."
  }
}

Function install_sysinternals_pkg
{
  Try
  {
    # Sysinternals
    Start-BitsTransfer -Source "https://download.sysinternals.com/files/SysinternalsSuite.zip" -Destination "C:\Users\$env:UserName\Downloads\"
    Write-Output "Downloaded SysInternals"
    & '7z' x SysinternalsSuite.zip -oc:\Utilities
    Write-Output "Extracted Sysinternals Tools to Utilities."
  }
  Catch
  {
    Write-Output "Unable to download SysInternals"
  }
}

Function install_ollydbg_pkg
{
  Try
  {
    # OllyDbg
    Start-BitsTransfer -Source "http://www.ollydbg.de/odbg110.zip" -Destination "C:\Users\$env:UserName\Downloads\"
    Write-Output "Downloaded OllyDbg"
  }
  Catch
  {
    Write-Output "Unable to download OllyDbg"
  }
}

Function install_ollydbg2_pkg
{
  Try
  {
    # OllyDbg2
    Start-BitsTransfer -Source "http://www.ollydbg.de/odbg200.zip" -Destination "C:\Users\$env:UserName\Downloads\"
    Write-Output "Downloaded OllyDbg2"
  }
  Catch
  {
    Write-Output "Unable to download OllyDbg2"
  }
}

Function install_peepdf_pkg
{
  Try
  {
    # Peepdf
    Start-BitsTransfer -Source "https://github.com/jesparza/peepdf/archive/master.zip" -Destination "C:\Users\$env:UserName\Downloads\peepdf.zip"
    Write-Output "Downloaded Peepdf"
  }
  Catch
  {
    Write-Output "Unable to download Peepdf"
  }
}

Function install_officemalscan_pkg
{
  Try
  {
    #OfficeMalScanner
    Start-BitsTransfer -Source "http://www.reconstructer.org/code/OfficeMalScanner.zip" -Destination "C:\Users\$env:UserName\Downloads\"
    Write-Output "Downloaded Office MalScanner"
  }
  Catch
  {
    Write-Output "Unable to download MalScanner"
  }
}

Function install_offvis_pkg
{
  Try
  {
    #OffVis
    Start-BitsTransfer -Source "http://download.microsoft.com/download/1/2/7/127ba59a-4fe1-4acd-ba47-513ceef85a85/OffVis.zip" -Destination "C:\Users\$env:UserName\Downloads\"
    Write-Output "Downloaded OffVis"
  }
  Catch
  {
    Write-Output "Unable to Download OffVis"
  }
}

Function install_xorsearch_pkg
{
  Try
  {
    #XORsearch
    Start-BitsTransfer -Source "http://didierstevens.com/files/software/XORSearch_V1_11_1.zip" -Destination "C:\Users\$env:UserName\Downloads\xorsearch.zip"
    Write-Output "Downloaded XORSearch"
  }
  Catch
  {
    Write-Output "Unable to download XORSearch"
  }
}

Function install_brutexor_pkg
{
  Try
  {
    #BruteXOR
    Start-BitsTransfer -Source "https://github.com/foreni-packages/brutexor/archive/master.zip" -Destination "C:\Users\$env:UserName\Downloads\brutexor.zip"
    Write-Output "Downloaded BruteXOR"
  }
  Catch
  {
    Write-Output "Unable to download BruteXOR"
  }
}

Function install_mingw_pkg
{
  Try
  {
    # MingGW
    Start-BitsTransfer -Source "https://downloads.sourceforge.net/project/mingw/Installer/mingw-get-setup.exe" -Destination "C:\Users\$env:UserName\Downloads\mingw32.tar.bz2"
    Write-Output "Downloaded MinGW"
    [Environment]::SetEnvironmentVariable("Path",$env:Path + ";C:\MinGW\bin\", [EnvironmentVariableTarget]::Machine)
    $env:Path = [Environment]::GetEnvironmentVariable("Path","Machine")
    Write-Output "Updated MinGW Path"
  }
  Catch
  {
    Write-Output "Unable to download MinGW"
  }
}

Function install_010editor_pkg
{
  Try
  {
    # 010 Editor
    Start-BitsTransfer -Source "https://www.sweetscape.com/download/010EditorWin32Installer.zip" -Destination "C:\Users\$env:UserName\Downloads\010editor.zip"
    Write-Output "Downloaded 010 Editor"
  }
  Catch
  {
    Write-Output "Unable to download 010 Editor."
  }
}

Function install_idapro_pkg
{
  Try
  {
    Start-BitsTransfer -Source "https://out7.hex-rays.com/files/idafree50.exe" -Destination "C:\Users\$env:UserName\Downloads\"
    Write-Output "Downloaded IDA Pro"
  }
  Catch
  {
    Write-Output "Unable to download IDA Pro"
  }
}

Function install_ssdeep_pkg
{
  Try
  {
    #
    Start-BitsTransfer -Source "https://dronedata.dl.sourceforge.net/project/ssdeep/ssdeep-2.13/ssdeep-2.13.zip" -Destination "C:\Users\$env:UserName\Downloads\"
    Write-Output "Downloaded SSDeep"
  }
  Catch
  {
    Write-Output "Unable to download SSDeep"
  }
}

Function install_------_pkg
{
  Try
  {
    #
    Start-BitsTransfer -Source "" -Destination "C:\Users\$env:UserName\Downloads\"
    Write-Output "Downloaded "
  }
  Catch
  {
    Write-Output "Unable to download "
  }
}
